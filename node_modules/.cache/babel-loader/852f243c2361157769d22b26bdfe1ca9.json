{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Documents/react-complete/06-usereducer-starting-project/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"../UI/Input/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"PASSWORD_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type = \"PASSWORD_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const ctx = useContext(AuthContext);\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checking form validity!\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log(\"CLEANUP\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    }); // setFormIsValid(event.target.value.includes(\"@\") && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: \"PASSWORD_INPUT\",\n      val: event.target.value\n    }); // setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"PASSWORD_BLUR\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    ctx.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        label: \"E-Mail\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"vl1BJMmpYtCAtdDWB/4OVwSAgdo=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/michael/Documents/react-complete/06-usereducer-starting-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","useContext","Card","classes","Button","AuthContext","Input","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","ctx","emailIsValid","passwordIsValid","identifier","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","actions","btn"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useReducer, useContext} from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"../UI/Input/Input\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {value: action.val, isValid: action.val.includes(\"@\")};\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {value: state.value, isValid: state.value.includes(\"@\")};\n  }\n  return {value: \"\", isValid: false};\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"PASSWORD_INPUT\") {\n    return {value: action.val, isValid: action.val.trim().length > 6};\n  }\n  if ((action.type = \"PASSWORD_BLUR\")) {\n    return {value: state.value, isValid: state.value.trim().length > 6};\n  }\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {value: \"\", isValid: null});\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {value: \"\", isValid: null});\n\n  const ctx = useContext(AuthContext);\n\n  const {isValid: emailIsValid} = emailState;\n  const {isValid: passwordIsValid} = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checking form validity!\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n\n    return () => {\n      console.log(\"CLEANUP\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type: \"USER_INPUT\", val: event.target.value});\n\n    // setFormIsValid(event.target.value.includes(\"@\") && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({type: \"PASSWORD_INPUT\", val: event.target.value});\n\n    // setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type: \"INPUT_BLUR\"});\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({type: \"PASSWORD_BLUR\"});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    ctx.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input id=\"email\" label=\"E-Mail\" type=\"email\" isValid={emailIsValid} value={emailState.value} onChange={emailChangeHandler} onBlur={validateEmailHandler} />\n        <Input id=\"password\" label=\"Password\" type=\"password\" isValid={passwordIsValid} value={passwordState.value} onChange={passwordChangeHandler} onBlur={validatePasswordHandler} />\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}